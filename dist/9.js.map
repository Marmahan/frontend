{"version":3,"sources":["webpack:///./src/register/root.component.js","webpack:///./src/register/register.app.js"],"names":["Register","state","name","email","password","usersubmitted","error","handlechange","e","_this$setState","_this","setState","target","id","value","handlesubmit","preventDefault","axios","post","then","response","data","Materialize","toast","render","this","react_default","a","createElement","className","onSubmit","type","onChange","htmlFor","required","aria-required","onClick","React","Component","__webpack_require__","d","__webpack_exports__","bootstrap","mount","unmount","reactLifecycles","singleSpaReact","ReactDOM","rootComponent","domElementGetter","document","getElementById"],"mappings":"sVA4GeA,mQA/FbC,MAAM,CACJC,KAAK,GACLC,MAAM,GACNC,SAAS,GACTC,cAAc,GACdC,MAAM,MAGRC,aAAc,SAACC,GAAI,IAAAC,EACjBC,EAAKC,WAALF,EAAA,IACGD,EAAEI,OAAOC,IAAIL,EAAEI,OAAOE,MADzBL,OAKFM,aAAc,SAACP,GACbA,EAAEQ,iBAGFC,IAAMC,KAAK,gCAAgC,CACzChB,KAAKQ,EAAKT,MAAMC,KAChBC,MAAMO,EAAKT,MAAME,MACjBC,SAASM,EAAKT,MAAMG,WACnBe,KAAK,SAACC,GACW,GAAfA,EAASC,KACVX,EAAKC,SAAS,CAACN,eAAc,KAG7BK,EAAKC,SAAS,CACZL,MAAMc,EAASC,OAIfX,EAAKT,MAAMK,QACTgB,YAAYC,MAAMb,EAAKT,MAAMK,MAAO,IAAO,eAC3CI,EAAKC,SAAS,CACZL,MAAM,mWAQlBkB,kBACE,OACEC,KAAKxB,MAAMI,cACTqB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qBACbH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,qBAAd,iCACAH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,qBAAd,wBAKNH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qBACbH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,yBAAb,kBACAH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,qBAAd,uBAGJH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qBACbH,EAAAC,EAAAC,cAAA,QAAME,SAAUL,KAAKV,cACnBW,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACbH,EAAAC,EAAAC,cAAA,SAAOG,KAAK,OAAO7B,KAAK,OAAOW,GAAG,OAAOmB,SAAUP,KAAKlB,eACxDmB,EAAAC,EAAAC,cAAA,SAAOK,QAAQ,QAAf,SAGFP,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACbH,EAAAC,EAAAC,cAAA,SAAOf,GAAG,QAAQkB,KAAK,QAAQF,UAAU,WAAWK,SAAS,GAAGC,gBAAc,OAAOH,SAAUP,KAAKlB,eAClGmB,EAAAC,EAAAC,cAAA,SAAOK,QAAQ,SAAf,WAINP,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACbH,EAAAC,EAAAC,cAAA,SAAOG,KAAK,WAAW7B,KAAK,WAAWW,GAAG,WAAWmB,SAAUP,KAAKlB,eACpEmB,EAAAC,EAAAC,cAAA,SAAOK,QAAQ,YAAf,aAGFP,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cAAf,KACEH,EAAAC,EAAAC,cAAA,SAAOG,KAAK,SAASK,QAASX,KAAKV,aAAaD,MAAM,OAAOe,UAAU,iBArFlEQ,IAAMC,WCX7BC,EAAAC,EAAAC,EAAA,8BAAAC,IAAAH,EAAAC,EAAAC,EAAA,0BAAAE,IAAAJ,EAAAC,EAAAC,EAAA,4BAAAG,IAQA,IAAMC,EAAkBC,IAAe,CACrCT,UACAU,aACAC,cAAehD,EACfiD,iBAgBF,WACE,OAAOC,SAASC,eAAe,eAdpBT,EAAY,CACvBG,EAAgBH,WAGLC,EAAQ,CACnBE,EAAgBF,OAGLC,EAAU,CACrBC,EAAgBD","file":"9.js","sourcesContent":["import React from \"react\";\r\nimport { TransitionGroup, CSSTransition } from \"react-transition-group\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Link,\r\n  Redirect\r\n} from \"react-router-dom\";\r\nimport axios from 'axios';  //to make the post request\r\n\r\nclass Register extends React.Component{\r\n\r\n  state={\r\n    name:'',\r\n    email:'',\r\n    password:'',\r\n    usersubmitted:'',\r\n    error:''\r\n  }\r\n  \r\n  handlechange =(e)=>{\r\n    this.setState({\r\n      [e.target.id]:e.target.value\r\n    })\r\n  }\r\n\r\n  handlesubmit =(e)=>{\r\n    e.preventDefault();\r\n    //console.log(this.state);\r\n    //call registration microservice\r\n    axios.post('http://localhost:1111/newuser',{\r\n      name:this.state.name,\r\n      email:this.state.email,\r\n      password:this.state.password\r\n    }).then((response)=>{\r\n      if(response.data==1){//successfull\r\n        this.setState({usersubmitted:true})\r\n      }\r\n      else{                       //the response has errors\r\n        this.setState({\r\n          error:response.data     \r\n        })\r\n        //console.log(this.state.error);\r\n        {\r\n          this.state.error ? (  //show the response error\r\n            Materialize.toast(this.state.error, 3000 , 'red rounded'),\r\n            this.setState({     //clear the error\r\n              error:''\r\n            })\r\n          ) : null\r\n        }\r\n      }\r\n    })\r\n  }\r\n\r\n  render(){\r\n    return(\r\n      this.state.usersubmitted ? (   //if message submitted, print a success message to the user\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"card-panel center\">\r\n              <h5 className=\"center green-text\">Account created successfully!</h5>\r\n              <h6 className=\"center green-text\">You may now login</h6>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        ) : ( //show the new user form\r\n        <div className='container'>\r\n          <div className=\"row\">\r\n            <div className=\"card-panel center\">\r\n              <i className=\"medium material-icons\">account_circle</i>\r\n              <h5 className='center black-text'>Create an account</h5> \r\n            </div>\r\n          </div>\r\n          <div className=\"row\">\r\n            <div className=\"card-panel center\">\r\n              <form onSubmit={this.handlesubmit}>\r\n                <div className=\"input-field\">\r\n                  <input type=\"text\" name=\"name\" id=\"name\" onChange={this.handlechange}/>\r\n                  <label htmlFor=\"name\">Name</label>\r\n                </div>\r\n\r\n                <div className=\"input-field\">\r\n                  <div className=\"left-align\">\r\n                    <input id=\"email\" type=\"email\" className=\"validate\" required=\"\" aria-required=\"true\" onChange={this.handlechange}/>\r\n                      <label htmlFor=\"email\">Email</label>\r\n                  </div>\r\n                </div>\r\n\r\n                <div className=\"input-field\">\r\n                  <input type=\"password\" name=\"password\" id=\"password\" onChange={this.handlechange}/>\r\n                  <label htmlFor=\"password\">Password</label>\r\n                </div>\r\n\r\n                <div className=\"left-align\">  {/* This div wrapper is necessary for the left alignment */}\r\n                  <input type=\"button\" onClick={this.handlesubmit}value=\"Send\" className=\"btn\"/>\r\n                </div>\r\n\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )\r\n    )\r\n  }\r\n}\r\n\r\nexport default Register;","// home.app.js\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport singleSpaReact from 'single-spa-react';\r\nimport Register from './root.component.js';\r\n\r\n\r\n\r\nconst reactLifecycles = singleSpaReact({\r\n  React,\r\n  ReactDOM,\r\n  rootComponent: Register,\r\n  domElementGetter,\r\n})\r\n\r\nexport const bootstrap = [\r\n  reactLifecycles.bootstrap,\r\n];\r\n\r\nexport const mount = [\r\n  reactLifecycles.mount,\r\n];\r\n\r\nexport const unmount = [\r\n  reactLifecycles.unmount,\r\n];\r\n\r\n// Where SPA mounts the app\r\nfunction domElementGetter() {\r\n  return document.getElementById(\"register\")\r\n}"],"sourceRoot":""}