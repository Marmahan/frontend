{"version":3,"sources":["webpack:///./src/contactus/root.component.js","webpack:///./src/contactus/contactus.app.js"],"names":["Contactus","state","name","email","content","messageSubmitted","error","handlenamechange","e","_this","setState","target","value","handleemailchange","handlecontentchange","handlesubmit","preventDefault","axios","post","then","response","console","log","data","Materialize","toast","render","this","react_default","a","createElement","className","onSubmit","type","id","onChange","htmlFor","required","aria-required","onClick","React","Component","__webpack_require__","d","__webpack_exports__","bootstrap","mount","unmount","reactLifecycles","singleSpaReact","ReactDOM","rootComponent","domElementGetter","document","getElementById"],"mappings":"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","file":"7.js","sourcesContent":["import React from \"react\";\r\nimport { TransitionGroup, CSSTransition } from \"react-transition-group\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Link,\r\n  Redirect\r\n} from \"react-router-dom\";\r\nimport axios from 'axios';  //to make the post request\r\n\r\nclass Contactus extends React.Component{\r\n  \r\n  state={\r\n    name:'',\r\n    email:'',\r\n    content:'',\r\n    messageSubmitted:'',\r\n    error:'',\r\n  }\r\n\r\n  handlenamechange =(e)=>{\r\n    this.setState({\r\n      name:e.target.value\r\n    })\r\n  } \r\n\r\n  handleemailchange =(e)=>{\r\n    this.setState({\r\n      email:e.target.value\r\n    })\r\n  } \r\n\r\n  handlecontentchange =(e)=>{\r\n    this.setState({\r\n      content:e.target.value\r\n    })\r\n  } \r\n\r\n  //called when submit button is pressed\r\n  handlesubmit =(e)=>{\r\n    this.setState({         //clear previous successfully submitted message\r\n      messageSubmitted:''\r\n    })\r\n    let err='';\r\n    e.preventDefault();\r\n    //http://localhost:1113/contact\r\n    axios.post('http://minipc2.informatik.tu-chemnitz.de/contact',{\r\n      name: this.state.name,\r\n      \"email\": this.state.email,\r\n      \"content\": this.state.content,\r\n    }).then((response) =>{\r\n      console.log(response);\r\n      if(response.data==1){         //response equals 1 means successfuly submitted message\r\n        this.setState({messageSubmitted:true})\r\n      }\r\n      else{                       //the response has errors\r\n        this.setState({\r\n          error:response.data     \r\n        })\r\n        {\r\n          this.state.error ? (  //show the response error\r\n            Materialize.toast(this.state.error, 3000 , 'red rounded'),\r\n            this.setState({     //clear the error\r\n              error:''\r\n            })\r\n          ) : null\r\n        }\r\n      }\r\n\r\n    })\r\n  }\r\n\r\n  render(){\r\n    return(\r\n      this.state.messageSubmitted ? (   //if message submitted, print a success message to the user\r\n          <div className=\"container\">\r\n            <div className=\"row\">\r\n              <div className=\"card-panel center\">\r\n                <h5 className=\"center green-text\">Message submitted!</h5>\r\n                <h6 className=\"center green-text\">Thanks for contacting us</h6>\r\n              </div>\r\n            </div>\r\n          </div>\r\n      ) : (                             //otherwise keep showing the form\r\n            <div className='container'>\r\n            <div className=\"row\">\r\n              <div className=\"card-panel center\">\r\n                <i className=\"medium material-icons\">email</i>\r\n                <h5 className='center black-text'>Contact us</h5> \r\n              </div>\r\n            </div>\r\n            <div className=\"row\">\r\n              <div className=\"card-panel center\">\r\n                <form onSubmit={this.handlesubmit}>\r\n                  <div className=\"input-field\">\r\n                    <input type=\"text\" name=\"name\" id=\"name\" onChange={this.handlenamechange}/>\r\n                    <label htmlFor=\"name\">Name</label>\r\n                  </div>\r\n\r\n                  <div className=\"input-field\">\r\n                    <div className=\"left-align\">\r\n                      <input id=\"email\" type=\"email\" className=\"validate\" required=\"\" aria-required=\"true\" onChange={this.handleemailchange}/>\r\n                        <label htmlFor=\"email\">Email</label>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className=\"input-field\">\r\n                    <textarea  name=\"content\" id=\"content\" className=\"materialize-textarea\" onChange={this.handlecontentchange}/>\r\n                    <label htmlFor=\"content\">Message content</label>\r\n                  </div>\r\n\r\n                  <div className=\"left-align\">  {/* This div wrapper is necessary for the left alignment */}\r\n                    <input type=\"button\" onClick={this.handlesubmit}value=\"Send\" className=\"btn\"/>\r\n                  </div>\r\n\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n      )\r\n\r\n    )\r\n  }\r\n}\r\n\r\nexport default Contactus;","// home.app.js\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport singleSpaReact from 'single-spa-react';\r\nimport Contactus from './root.component.js';\r\n\r\n\r\n/* Implement several SIngle-SPA functions */\r\nconst reactLifecycles = singleSpaReact({\r\n  React,\r\n  ReactDOM,\r\n  rootComponent: Contactus,\r\n  domElementGetter,\r\n})\r\n\r\nexport const bootstrap = [\r\n  reactLifecycles.bootstrap,\r\n];\r\n\r\nexport const mount = [\r\n  reactLifecycles.mount,\r\n];\r\n\r\nexport const unmount = [\r\n  reactLifecycles.unmount,\r\n];\r\n\r\n// tell Single-SPA where to mount the app\r\nfunction domElementGetter() {\r\n  return document.getElementById(\"contactus\")\r\n}"],"sourceRoot":""}